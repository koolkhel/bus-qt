// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_message.proto

#ifndef PROTOBUF_test_5fmessage_2eproto__INCLUDED
#define PROTOBUF_test_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "indigo_message.pb.h"
// @@protoc_insertion_point(includes)

namespace indigo {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_5fmessage_2eproto();
void protobuf_AssignDesc_test_5fmessage_2eproto();
void protobuf_ShutdownFile_test_5fmessage_2eproto();

class test_message;

// ===================================================================

class test_message : public ::google::protobuf::MessageLite {
 public:
  test_message();
  virtual ~test_message();

  test_message(const test_message& from);

  inline test_message& operator=(const test_message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const test_message& default_instance();

  void Swap(test_message* other);

  // implements Message ----------------------------------------------

  inline test_message* New() const { return New(NULL); }

  test_message* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const test_message& from);
  void MergeFrom(const test_message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(test_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string test_string = 4;
  bool has_test_string() const;
  void clear_test_string();
  static const int kTestStringFieldNumber = 4;
  const ::std::string& test_string() const;
  void set_test_string(const ::std::string& value);
  void set_test_string(const char* value);
  void set_test_string(const char* value, size_t size);
  ::std::string* mutable_test_string();
  ::std::string* release_test_string();
  void set_allocated_test_string(::std::string* test_string);

  static const int kTestMessageInFieldNumber = 202;
  static ::google::protobuf::internal::ExtensionIdentifier< ::indigo::pb::internal_msg,
      ::google::protobuf::internal::MessageTypeTraits< ::indigo::pb::test_message >, 11, false >
    test_message_in;
  static const int kTestMessageOutFieldNumber = 202;
  static ::google::protobuf::internal::ExtensionIdentifier< ::indigo::pb::indigo_msg,
      ::google::protobuf::internal::MessageTypeTraits< ::indigo::pb::test_message >, 11, false >
    test_message_out;
  // @@protoc_insertion_point(class_scope:indigo.pb.test_message)
 private:
  inline void set_has_test_string();
  inline void clear_has_test_string();

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr test_string_;
  friend void  protobuf_AddDesc_test_5fmessage_2eproto();
  friend void protobuf_AssignDesc_test_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_test_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static test_message* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// test_message

// optional string test_string = 4;
inline bool test_message::has_test_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_message::set_has_test_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_message::clear_has_test_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_message::clear_test_string() {
  test_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_test_string();
}
inline const ::std::string& test_message::test_string() const {
  // @@protoc_insertion_point(field_get:indigo.pb.test_message.test_string)
  return test_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void test_message::set_test_string(const ::std::string& value) {
  set_has_test_string();
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:indigo.pb.test_message.test_string)
}
inline void test_message::set_test_string(const char* value) {
  set_has_test_string();
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:indigo.pb.test_message.test_string)
}
inline void test_message::set_test_string(const char* value, size_t size) {
  set_has_test_string();
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:indigo.pb.test_message.test_string)
}
inline ::std::string* test_message::mutable_test_string() {
  set_has_test_string();
  // @@protoc_insertion_point(field_mutable:indigo.pb.test_message.test_string)
  return test_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* test_message::release_test_string() {
  clear_has_test_string();
  return test_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void test_message::set_allocated_test_string(::std::string* test_string) {
  if (test_string != NULL) {
    set_has_test_string();
  } else {
    clear_has_test_string();
  }
  test_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_string);
  // @@protoc_insertion_point(field_set_allocated:indigo.pb.test_message.test_string)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace indigo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_5fmessage_2eproto__INCLUDED
