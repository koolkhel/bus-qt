// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blackbox_message.proto

#ifndef PROTOBUF_blackbox_5fmessage_2eproto__INCLUDED
#define PROTOBUF_blackbox_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "indigo_message.pb.h"
// @@protoc_insertion_point(includes)

namespace indigo {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_blackbox_5fmessage_2eproto();
void protobuf_AssignDesc_blackbox_5fmessage_2eproto();
void protobuf_ShutdownFile_blackbox_5fmessage_2eproto();

class blackbox_message;
class confirmed_messages;
class to_send;

// ===================================================================

class blackbox_message : public ::google::protobuf::MessageLite {
 public:
  blackbox_message();
  virtual ~blackbox_message();

  blackbox_message(const blackbox_message& from);

  inline blackbox_message& operator=(const blackbox_message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const blackbox_message& default_instance();

  void Swap(blackbox_message* other);

  // implements Message ----------------------------------------------

  inline blackbox_message* New() const { return New(NULL); }

  blackbox_message* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const blackbox_message& from);
  void MergeFrom(const blackbox_message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(blackbox_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:indigo.pb.blackbox_message)
 private:

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_AssignDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_blackbox_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static blackbox_message* default_instance_;
};
// -------------------------------------------------------------------

class confirmed_messages : public ::google::protobuf::MessageLite {
 public:
  confirmed_messages();
  virtual ~confirmed_messages();

  confirmed_messages(const confirmed_messages& from);

  inline confirmed_messages& operator=(const confirmed_messages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const confirmed_messages& default_instance();

  void Swap(confirmed_messages* other);

  // implements Message ----------------------------------------------

  inline confirmed_messages* New() const { return New(NULL); }

  confirmed_messages* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const confirmed_messages& from);
  void MergeFrom(const confirmed_messages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(confirmed_messages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 message_ids = 1;
  int message_ids_size() const;
  void clear_message_ids();
  static const int kMessageIdsFieldNumber = 1;
  ::google::protobuf::int32 message_ids(int index) const;
  void set_message_ids(int index, ::google::protobuf::int32 value);
  void add_message_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      message_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_message_ids();

  static const int kConfirmedMessagesOutFieldNumber = 204;
  static ::google::protobuf::internal::ExtensionIdentifier< ::indigo::pb::indigo_msg,
      ::google::protobuf::internal::MessageTypeTraits< ::indigo::pb::confirmed_messages >, 11, false >
    confirmed_messages_out;
  static const int kConfirmedMessagesInFieldNumber = 204;
  static ::google::protobuf::internal::ExtensionIdentifier< ::indigo::pb::internal_msg,
      ::google::protobuf::internal::MessageTypeTraits< ::indigo::pb::confirmed_messages >, 11, false >
    confirmed_messages_in;
  // @@protoc_insertion_point(class_scope:indigo.pb.confirmed_messages)
 private:

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > message_ids_;
  friend void  protobuf_AddDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_AssignDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_blackbox_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static confirmed_messages* default_instance_;
};
// -------------------------------------------------------------------

class to_send : public ::google::protobuf::MessageLite {
 public:
  to_send();
  virtual ~to_send();

  to_send(const to_send& from);

  inline to_send& operator=(const to_send& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const to_send& default_instance();

  void Swap(to_send* other);

  // implements Message ----------------------------------------------

  inline to_send* New() const { return New(NULL); }

  to_send* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const to_send& from);
  void MergeFrom(const to_send& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(to_send* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  static const int kToSendInFieldNumber = 205;
  static ::google::protobuf::internal::ExtensionIdentifier< ::indigo::pb::internal_msg,
      ::google::protobuf::internal::MessageTypeTraits< ::indigo::pb::to_send >, 11, false >
    to_send_in;
  // @@protoc_insertion_point(class_scope:indigo.pb.to_send)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_AssignDesc_blackbox_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_blackbox_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static to_send* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// blackbox_message

// -------------------------------------------------------------------

// confirmed_messages

// repeated int32 message_ids = 1;
inline int confirmed_messages::message_ids_size() const {
  return message_ids_.size();
}
inline void confirmed_messages::clear_message_ids() {
  message_ids_.Clear();
}
inline ::google::protobuf::int32 confirmed_messages::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:indigo.pb.confirmed_messages.message_ids)
  return message_ids_.Get(index);
}
inline void confirmed_messages::set_message_ids(int index, ::google::protobuf::int32 value) {
  message_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:indigo.pb.confirmed_messages.message_ids)
}
inline void confirmed_messages::add_message_ids(::google::protobuf::int32 value) {
  message_ids_.Add(value);
  // @@protoc_insertion_point(field_add:indigo.pb.confirmed_messages.message_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
confirmed_messages::message_ids() const {
  // @@protoc_insertion_point(field_list:indigo.pb.confirmed_messages.message_ids)
  return message_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
confirmed_messages::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:indigo.pb.confirmed_messages.message_ids)
  return &message_ids_;
}

// -------------------------------------------------------------------

// to_send

// optional int32 id = 1 [default = 0];
inline bool to_send::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void to_send::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void to_send::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void to_send::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 to_send::id() const {
  // @@protoc_insertion_point(field_get:indigo.pb.to_send.id)
  return id_;
}
inline void to_send::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:indigo.pb.to_send.id)
}

// optional bytes data = 2;
inline bool to_send::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void to_send::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void to_send::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void to_send::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& to_send::data() const {
  // @@protoc_insertion_point(field_get:indigo.pb.to_send.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void to_send::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:indigo.pb.to_send.data)
}
inline void to_send::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:indigo.pb.to_send.data)
}
inline void to_send::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:indigo.pb.to_send.data)
}
inline ::std::string* to_send::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:indigo.pb.to_send.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* to_send::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void to_send::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:indigo.pb.to_send.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace indigo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_blackbox_5fmessage_2eproto__INCLUDED
